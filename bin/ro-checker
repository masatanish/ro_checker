#!/usr/bin/env ruby

require 'trollop'
require 'ro_checker'

opts = Trollop::options do
  banner "#{$0} [options] FILE_PATH"
  opt :verbose, 'verbose mode'
end
path = ARGV.shift
Trollop.die "Input file is missing" unless File.file? path.to_s

begin
  results = RoChecker::CFB.check_from_path(path)
rescue => e
  Trollop.die e
end
total_result = results.values.any?{|v| v == true}
value = (results.values.any?{|v| v == false } ? 'suspicious' : 'not suspicious')
puts "ro-checker: " + value
if opts[:verbose]
  max_key_len = results.keys.max_by{|k| k.length }.length
  results.each do |key, val|
    k = key.to_s.gsub(/_/,' ') + ":"
    v = val ? 'yes' : 'no'
    puts "  #{k.ljust(max_key_len+2)} #{v}"
  end
end
